// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package global.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the Global module
	public static java.lang.Long aCT_Awaiting_Count(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Long) Core.microflowCall("Global.ACT_Awaiting_Count").withParams(params).execute(context);
	}
	public static java.lang.Long aCT_Delayed_Count(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Long) Core.microflowCall("Global.ACT_Delayed_Count").withParams(params).execute(context);
	}
	public static java.lang.Long aCT_Inbox_Count(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Long) Core.microflowCall("Global.ACT_Inbox_Count").withParams(params).execute(context);
	}
	public static java.lang.Long aCT_Received_Count(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Long) Core.microflowCall("Global.ACT_Received_Count").withParams(params).execute(context);
	}
	public static java.lang.Long aCT_Running_Count(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Long) Core.microflowCall("Global.ACT_Running_Count").withParams(params).execute(context);
	}
	public static global.proxies.SummaryInfo aCT_SummaryInfo(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Global.ACT_SummaryInfo").withParams(params).execute(context);
		return result == null ? null : global.proxies.SummaryInfo.initialize(context, result);
	}
	public static void exp_Base(IContext context, global.proxies.ExcelDoc _excelSource, java.lang.String _templateName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ExcelSource", _excelSource == null ? null : _excelSource.getMendixObject());
		params.put("TemplateName", _templateName);
		Core.microflowCall("Global.Exp_Base").withParams(params).execute(context);
	}
}
