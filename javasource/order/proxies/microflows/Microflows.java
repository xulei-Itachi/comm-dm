// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package order.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the Order module
	public static java.util.List<configs.proxies.ConfigVariantDetail> aCT_GetProcessByVariant(IContext context, java.lang.String _variantName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("variantName", _variantName);
		java.util.List<IMendixObject> objs = Core.microflowCall("Order.ACT_GetProcessByVariant").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> configs.proxies.ConfigVariantDetail.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void aCT_OrderEdit_Accept(IContext context, order.proxies.Order _order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Order", _order == null ? null : _order.getMendixObject());
		Core.microflowCall("Order.ACT_OrderEdit_Accept").withParams(params).execute(context);
	}
	public static void aCT_OrderEdit_Close(IContext context, order.proxies.Order _order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Order", _order == null ? null : _order.getMendixObject());
		Core.microflowCall("Order.ACT_OrderEdit_Close").withParams(params).execute(context);
	}
	public static java.util.List<order.proxies.OrderProcess> aCT_OrderEdit_GetProcessList(IContext context, order.proxies.Order _order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Order", _order == null ? null : _order.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Order.ACT_OrderEdit_GetProcessList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> order.proxies.OrderProcess.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void aCT_OrderEdit_Save(IContext context, order.proxies.Order _order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Order", _order == null ? null : _order.getMendixObject());
		Core.microflowCall("Order.ACT_OrderEdit_Save").withParams(params).execute(context);
	}
	public static void aCT_OrderEdit_Variant_Change(IContext context, order.proxies.Order _order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Order", _order == null ? null : _order.getMendixObject());
		Core.microflowCall("Order.ACT_OrderEdit_Variant_Change").withParams(params).execute(context);
	}
	public static void exp_Order_MasterList(IContext context, java.util.List<order.proxies.Order> _orderList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_orderList = null;
		if (_orderList != null)
		{
			listparam_orderList = new java.util.ArrayList<>();
			for (var obj : _orderList) {
				listparam_orderList.add(obj.getMendixObject());
			}
		}
		params.put("OrderList", listparam_orderList);

		Core.microflowCall("Order.Exp_Order_MasterList").withParams(params).execute(context);
	}
}
