// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package configs.proxies;

public class ConfigLine
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject configLineMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Configs.ConfigLine";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LineName("LineName"),
		IsValid("IsValid"),
		ConfigLine_ConfigProcess("Configs.ConfigLine_ConfigProcess");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ConfigLine(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected ConfigLine(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject configLineMendixObject)
	{
		if (configLineMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, configLineMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.configLineMendixObject = configLineMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ConfigLine.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static configs.proxies.ConfigLine initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return configs.proxies.ConfigLine.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static configs.proxies.ConfigLine initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new configs.proxies.ConfigLine(context, mendixObject);
	}

	public static configs.proxies.ConfigLine load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return configs.proxies.ConfigLine.initialize(context, mendixObject);
	}

	public static java.util.List<configs.proxies.ConfigLine> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> configs.proxies.ConfigLine.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of LineName
	 */
	public final java.lang.String getLineName()
	{
		return getLineName(getContext());
	}

	/**
	 * @param context
	 * @return value of LineName
	 */
	public final java.lang.String getLineName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LineName.toString());
	}

	/**
	 * Set value of LineName
	 * @param linename
	 */
	public final void setLineName(java.lang.String linename)
	{
		setLineName(getContext(), linename);
	}

	/**
	 * Set value of LineName
	 * @param context
	 * @param linename
	 */
	public final void setLineName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String linename)
	{
		getMendixObject().setValue(context, MemberNames.LineName.toString(), linename);
	}

	/**
	 * @return value of IsValid
	 */
	public final java.lang.Boolean getIsValid()
	{
		return getIsValid(getContext());
	}

	/**
	 * @param context
	 * @return value of IsValid
	 */
	public final java.lang.Boolean getIsValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsValid.toString());
	}

	/**
	 * Set value of IsValid
	 * @param isvalid
	 */
	public final void setIsValid(java.lang.Boolean isvalid)
	{
		setIsValid(getContext(), isvalid);
	}

	/**
	 * Set value of IsValid
	 * @param context
	 * @param isvalid
	 */
	public final void setIsValid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isvalid)
	{
		getMendixObject().setValue(context, MemberNames.IsValid.toString(), isvalid);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of ConfigLine_ConfigProcess
	 */
	public final configs.proxies.ConfigProcess getConfigLine_ConfigProcess() throws com.mendix.core.CoreException
	{
		return getConfigLine_ConfigProcess(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigLine_ConfigProcess
	 * @throws com.mendix.core.CoreException
	 */
	public final configs.proxies.ConfigProcess getConfigLine_ConfigProcess(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		configs.proxies.ConfigProcess result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ConfigLine_ConfigProcess.toString());
		if (identifier != null) {
			result = configs.proxies.ConfigProcess.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of ConfigLine_ConfigProcess
	 * @param configline_configprocess
	 */
	public final void setConfigLine_ConfigProcess(configs.proxies.ConfigProcess configline_configprocess)
	{
		setConfigLine_ConfigProcess(getContext(), configline_configprocess);
	}

	/**
	 * Set value of ConfigLine_ConfigProcess
	 * @param context
	 * @param configline_configprocess
	 */
	public final void setConfigLine_ConfigProcess(com.mendix.systemwideinterfaces.core.IContext context, configs.proxies.ConfigProcess configline_configprocess)
	{
		if (configline_configprocess == null) {
			getMendixObject().setValue(context, MemberNames.ConfigLine_ConfigProcess.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.ConfigLine_ConfigProcess.toString(), configline_configprocess.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return configLineMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final configs.proxies.ConfigLine that = (configs.proxies.ConfigLine) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
